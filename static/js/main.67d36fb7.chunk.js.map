{"version":3,"sources":["notesReducer.js","localStorageReducer.js","LoginModal.js","LoginUpSellBanner.js","LoginStatusBanner.js","firebaseConnector.js","urls.js","LoginBarWithBanners.js","AddCard.js","ConfirmModal.js","NoteCard.js","NotesContainer.js","remoteDispatch.js","App.js","serviceWorker.js","index.js"],"names":["replaceNote","notes","id","content","index","findIndex","note","slice","concat","Object","objectSpread","removeNote","reducer","state","action","console","log","type","loginEmail","data","loginFlowStage","upSellDisabled","connectState","undefined","dataReducer","Error","LOCAL_STORAGE_KEY","initState","loadedDataState","storedItem","localStorage","getItem","JSON","parse","e","localStorageReducer","_notesReducer","useReducer","_notesReducer2","slicedToArray","dispatch","useEffect","dataState","setItem","stringify","LoginModal","_ref","show","initialEmail","onCancel","onConfirm","_useState","useState","_useState2","email","setEmail","react_default","a","createElement","Modal","onHide","Form","onSubmit","event","preventDefault","Header","closeButton","Title","Body","style","paddingBottom","Group","controlId","Label","Control","placeholder","onChange","target","value","Text","className","Footer","Button","variant","onClick","LoginUpsellBanner","onDismiss","onAction","Alert_default","dismissible","onClose","Heading","href","LoginStatusBanner","db","user","status","onLogin","showingWarning","setShowingWarning","_useState3","_useState4","showingError","setShowingError","basePath","firebase","require","actionCodeSettings","url","handleCodeInApp","setConnectState","init","apps","length","initializeApp","config","firestore","enablePersistence","catch","err","error","code","_callee","regenerator_default","wrap","_context","prev","next","abrupt","addUserStateListener","sent","t0","stop","_callee2","_context2","Promise","resolve","reject","auth","onAuthStateChanged","userObject","_callee3","_context3","sendSignInLinkToEmail","_callee4","address","_context4","isSignInWithEmailLink","signInWithEmailLink","_callee5","_context5","signOut","_callee6","_context6","retrieveNotes","sendNotes","_callee7","localNotes","_context7","collection","where","uid","get","forEach","doc","remoteData","find","updateNoteLocally","storeNoteLocally","_callee8","_context8","all","map","startsWith","storeNoteRemotely","source","title","body","_callee9","docRef","_context9","add","owner","_callee10","_context10","set","_callee11","_context11","delete","firebaseConnector","waitForUserAuth","startLogin","finishLogin","logout","sync","listenToChanges","onSnapshot","includeMetadataChanges","snapshot","metadata","fromCache","hasPendingWrites","docChanges","change","removeNoteLocally","updateNoteRemotely","removeNoteRemotely","LoginBarWithBanners","_useContext","useContext","StateContext","_useContext2","loginDialogVisible","setLoginDialogVisible","asyncToGenerator","mark","connector","_x","apply","this","arguments","Fragment","src_LoginModal","Navbar","bg","fixed","expand","onSelect","key","Brand","Toggle","aria-controls","Collapse","Nav","Link","LoginUpSellBanner","src_LoginStatusBanner","AddCard","Card_default","width","height","margin","marginBottom","borderStyle","background","borderColor","borderWidth","color","verticalAlign","ConfirmModal","message","Modal_default","Button_default","NoteCard","update","remove","editing","setEditing","setTitle","_useState5","_useState6","setBody","_useState7","_useState8","dialogVisible","setDialogVisible","src_ConfirmModal","Form_default","noValidate","as","defaultValue","display","justifyContent","overflow","whiteSpace","NotesContainer","Container","Row","item","Col","xs","sm","md","lg","xl","src_NoteCard","src_AddCard","Date","getTime","createRemoteDispatch","handleAction","createContext","match","history","window","location","push","App","_localStorageReducer","_localStorageReducer2","localDispatch","isLoggedIn","react_router_dom","basename","react_router","path","render","_ref2","handleLogin","_ref3","params","section","Provider","src_LoginBarWithBanners","src_NotesContainer","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67d36fb7.chunk.js","sourcesContent":["/**\r\n * @flow\r\n */\r\nimport { useReducer } from 'react';\r\n\r\nexport type Note = {|\r\n    id: string,\r\n    title: ?string,\r\n    body: ?string,\r\n|};\r\n\r\nexport type ConnectState = 'loginStarted' | 'loggedIn' | 'loginFailed';\r\n\r\nexport type DataState = {|\r\n    notes: Array<Note>,\r\n    loginEmail?: string,\r\n    loginFlowStage?: 'started' | 'completed',\r\n    upSellDisabled?: boolean,\r\n|};\r\n\r\nexport type State = {|\r\n    data: DataState,\r\n    connectState?: ConnectState,\r\n|};\r\n\r\nfunction addNote(notes: Array<Note>, content: Note): Array<Note> {\r\n    const index = notes.findIndex(note => note.id === content.id);\r\n    if (index !== -1) return notes; // cannot add with same id\r\n\r\n    console.log('adding note with id: ', content.id);\r\n    return notes\r\n        .concat({\r\n            ...content,\r\n        });\r\n}\r\n\r\nfunction replaceNote(notes: Array<Note>, id: string, content: Note): Array<Note> {\r\n    const index = notes.findIndex(note => note.id === id);\r\n    if (index === -1) return notes;\r\n    return notes\r\n        .slice(0, index)\r\n        .concat({\r\n            ...content,\r\n            id: content.id || id,\r\n        })\r\n        .concat(\r\n            notes.slice(index + 1)\r\n        );\r\n}\r\n\r\nfunction removeNote(notes: Array<Note>, id: string): Array<Note> {\r\n    const index = notes.findIndex(note => note.id === id);\r\n    if (index === -1) return notes;\r\n    return notes\r\n        .slice(0, index)\r\n        .concat(\r\n            notes.slice(index + 1)\r\n        );\r\n}\r\n\r\n/**\r\n * Reducer for actions that can modify both persistent (state.data) and non-persistent (state) data\r\n */\r\nexport function reducer(state: State, action: any): State {\r\n    console.log('reducer action:', action.type, action);\r\n    switch (action.type) {\r\n        case 'startLogin':\r\n            if (action.loginEmail == null) return state;\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    loginEmail: action.loginEmail,\r\n                    loginFlowStage: 'started',\r\n                    upSellDisabled: true,\r\n                },\r\n                connectState: 'loginStarted',\r\n            };\r\n        case 'completeLogin':\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    loginFlowStage: 'completed',\r\n                },\r\n                connectState: 'loggedIn',\r\n            };\r\n        case 'loginFailed':\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                },\r\n                connectState: 'loginFailed',\r\n            };\r\n        case 'logout':\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    loginEmail: undefined,\r\n                    loginFlowStage: undefined,\r\n                },\r\n                connectState: undefined,\r\n            };\r\n        case 'setConnectState':\r\n            return {\r\n                ...state,\r\n                connectState: action.connectState,\r\n            };            \r\n        default: return {\r\n            ...state,\r\n            data: dataReducer(state.data, action),\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Reducer for actions that only modify persistent data\r\n */\r\nfunction dataReducer(state: DataState, action: any): DataState {\r\n    switch (action.type) {\r\n        case 'addNote':\r\n            return {\r\n                ...state,\r\n                notes: addNote(state.notes, action.content),\r\n            };\r\n        case 'modifyNote':\r\n            if (action.id == null) return state;\r\n            return {\r\n                ...state,\r\n                notes: replaceNote(state.notes, action.id, action.content),\r\n            };\r\n        case 'removeNote':\r\n            if (action.id == null) return state;\r\n            return {\r\n                ...state,\r\n                notes: removeNote(state.notes, action.id),\r\n            };\r\n        case 'disableUpSell':\r\n            return {\r\n                ...state,\r\n                upSellDisabled: true,\r\n            };\r\n\r\n        default: throw new Error('unknown action: ' + action.type);\r\n    }\r\n}\r\n\r\nexport default function notesReducer(initState: () => State) {\r\n    return useReducer<State, any, null>(reducer, null, initState);\r\n}","/**\r\n * Decorator for notesReducer that loads/saves state from local storage\r\n * \r\n * @flow\r\n */\r\nimport type { DataState } from './notesReducer';\r\n\r\nimport { useEffect } from 'react';\r\nimport notesReducer from './notesReducer';\r\n\r\nconst LOCAL_STORAGE_KEY = 'appState';\r\n\r\nfunction initState() {\r\n    console.log('loading data from local storage');\r\n    const storedItem = localStorage.getItem(LOCAL_STORAGE_KEY) || '';\r\n    let loadedDataState;\r\n    try {\r\n        loadedDataState = JSON.parse(storedItem);\r\n    } catch (e) {\r\n        loadedDataState = null;\r\n    }\r\n    return {\r\n        data: loadedDataState || {\r\n            notes: [],\r\n        },\r\n    };\r\n}\r\n\r\nfunction saveState(dataState: DataState) {\r\n    console.log('saving data to local storage');\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(dataState));\r\n}\r\n\r\nfunction localStorageReducer() {\r\n    const [state, dispatch] = notesReducer(initState);\r\n\r\n    useEffect(() => {\r\n        saveState(state.data);\r\n    }, [state.data]);\r\n\r\n    return [state, dispatch];\r\n}\r\n\r\nexport default localStorageReducer;","/**\r\n * @flow\r\n */\r\nimport type {Node} from 'react';\r\n\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\n\r\ntype Props = {|\r\n  show: boolean,\r\n  initialEmail: ?string,\r\n  onCancel: () => void,\r\n  onConfirm: (string) => Promise<any>,\r\n|};\r\n\r\nfunction LoginModal({show, initialEmail, onCancel, onConfirm}: Props): Node {\r\n    const [email, setEmail] = useState(initialEmail);\r\n\r\n    const onSubmit = (event) => {\r\n      event.preventDefault();\r\n      if (email) onConfirm(email);\r\n    }\r\n\r\n    return (\r\n      <Modal show={show} onHide={onCancel}>\r\n        <Form onSubmit={onSubmit}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Sign up or Login</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div style={{paddingBottom: 20}}>Want to share your notes between the devices you use? Enter your email below to sign up or login.</div>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" >\r\n              Login\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default LoginModal;","\r\n/**\r\n * @flow\r\n */\r\nimport type {Node} from 'react';\r\n\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport React from 'react';\r\n\r\ntype Props = {|\r\n  onDismiss: () => void,\r\n  onAction: () => void,\r\n|};\r\n\r\nfunction LoginUpsellBanner({onDismiss, onAction}: Props): Node {\r\n    const onClick = (event) => {\r\n        event.preventDefault();\r\n        onAction();\r\n    }\r\n\r\n    return (\r\n        <Alert\r\n            dismissible\r\n            variant=\"primary\"\r\n            onClose={onDismiss}>\r\n            <Alert.Heading>Have multiple devices?</Alert.Heading>\r\n            <p>\r\n                You can get your notes on every device by&nbsp;\r\n                <a href=\"#login\" onClick={onClick}>logging in</a>.\r\n            </p>\r\n        </Alert>\r\n    );\r\n}\r\n\r\nexport default LoginUpsellBanner;","\r\n/**\r\n * @flow\r\n */\r\nimport type { Node } from 'react';\r\nimport type { ConnectState } from './notesReducer';\r\n\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport React, { useState } from 'react';\r\n\r\ntype Props = {|\r\n    status: ConnectState,\r\n    onLogin: () => void,\r\n|};\r\n\r\nfunction LoginStatusBanner({status, onLogin}: Props): Node {\r\n    const [showingWarning, setShowingWarning] = useState(true);\r\n    const [showingError, setShowingError] = useState(true);\r\n    const onClick = (event) => {\r\n        event.preventDefault();\r\n        onLogin();\r\n    }\r\n\r\n    switch (status) {\r\n        case 'loginStarted':\r\n            return (\r\n                <Alert\r\n                    dismissible\r\n                    variant=\"primary\"\r\n                    show={showingWarning}\r\n                    onClose={() => setShowingWarning(false)}\r\n                >\r\n                    <Alert.Heading>Waiting to Login</Alert.Heading>\r\n                    <p>\r\n                        Open the login link in an email we just sent you.\r\n                    </p>\r\n                </Alert>\r\n            );\r\n        case 'loggedIn':\r\n            return (\r\n                <Alert\r\n                    dismissible\r\n                    variant=\"success\"\r\n                    show={showingWarning}\r\n                    onClose={() => setShowingWarning(false)}\r\n                >\r\n                    <Alert.Heading>Logged in</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        case 'loginFailed':\r\n            return (\r\n                <Alert\r\n                    dismissible\r\n                    variant=\"danger\"\r\n                    show={showingError}\r\n                    onClose={() => setShowingError(false)}\r\n                >\r\n                    <Alert.Heading>Login failed</Alert.Heading>\r\n                    <p>\r\n                        Please&nbsp;\r\n                        <a href=\"#login\" onClick={onClick}>login</a>&nbsp;again.\r\n                    </p>\r\n                </Alert>\r\n            );\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport default LoginStatusBanner;","/**\r\n * @flow\r\n */\r\nimport type {Note} from './notesReducer';\r\nimport type {State, ConnectState} from './notesReducer';\r\n\r\nimport config from './firebaseConfig.json';\r\nimport {baseUrl} from './urls';\r\nconst firebase = require('firebase/app');\r\nrequire('firebase/auth');\r\nrequire('firebase/firestore');\r\n\r\nlet db;\r\nlet user;\r\nconst actionCodeSettings = {\r\n    url: `${baseUrl}/finishLogin/`,\r\n    handleCodeInApp: true,\r\n};\r\n\r\nfunction setConnectState(connectState: ConnectState, dispatch: Function) {\r\n    dispatch({\r\n        type: 'setConnectState',\r\n        connectState,\r\n    });\r\n}\r\n\r\nfunction init(state: State, dispatch: Function) {\r\n    try {\r\n        if (!firebase.apps.length) {\r\n            console.log('Initialising Firebase');\r\n            firebase.initializeApp(config);\r\n            initDb();\r\n        }\r\n    } catch (err) {\r\n        console.error('Firestore: Error initialising:', err && err.code);\r\n        setConnectState('loginFailed', dispatch);\r\n    }\r\n}\r\n\r\nfunction initDb() {\r\n    db = firebase.firestore();\r\n    db.enablePersistence()\r\n        .catch(function(err) {\r\n            console.error('Firestore: Failed to enable offline persistence:', err && err.code);\r\n        });\r\n}\r\n\r\nasync function waitForUserAuth(state: State, dispatch: Function): Promise<?firebase.User> {\r\n    if (user) return user;\r\n    try {\r\n        return await addUserStateListener(state, dispatch);\r\n    } catch (err) {\r\n        console.error('Firestore: Error initialising:', err && err.code);\r\n        setConnectState('loginFailed', dispatch);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function addUserStateListener(state: State, dispatch: Function): Promise<?firebase.User> {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.auth().onAuthStateChanged((userObject) => {\r\n            console.log('authStateChanged, user:', userObject);\r\n            if (userObject) {\r\n                user = userObject;\r\n                dispatch({type: 'completeLogin'});\r\n                resolve(user);\r\n            } else {\r\n                user = null;\r\n                setConnectState('loginFailed', dispatch);\r\n                resolve(null);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nasync function startLogin(email: string, state: State, dispatch: Function): Promise<void> {\r\n    try {\r\n        console.log('starting login');\r\n        init(state, dispatch);\r\n        await firebase.auth().sendSignInLinkToEmail(email, actionCodeSettings);\r\n        dispatch({\r\n            type: 'startLogin',\r\n            loginEmail: email,\r\n        });\r\n    } catch (err) {\r\n        console.error('Firestore: Login failed:', err && err.code);\r\n        setConnectState('loginFailed', dispatch);\r\n    }\r\n}\r\n\r\nasync function finishLogin(address: string, email: string, state: State, dispatch: Function): Promise<void> {\r\n    try {\r\n        if (!firebase.auth().isSignInWithEmailLink(address)) {\r\n            console.error('Address is not a valid login address:', address);\r\n            dispatch({type: 'loginFailed'});\r\n            return;\r\n        }\r\n        await firebase.auth().signInWithEmailLink(email, address);\r\n        dispatch({type: 'completeLogin'});\r\n    } catch (error) {\r\n        console.error('Error completing login:', error, error && error.code);\r\n        dispatch({type: 'loginFailed'});\r\n      }  \r\n}\r\n\r\nasync function logout(state: State, dispatch: Function): Promise<any> {\r\n    await firebase.auth().signOut();\r\n    dispatch({\r\n        type: 'logout'\r\n    });\r\n}\r\n\r\nasync function sync(state: State, dispatch: Function): Promise<any> {\r\n    if (!db || !user) {\r\n        console.error('DB or user not initialised');\r\n        throw new Error('DB or user not initialised');\r\n    }\r\n    \r\n    await retrieveNotes(state.data.notes, dispatch);\r\n    return sendNotes(state.data.notes, dispatch);            \r\n}\r\n\r\nfunction listenToChanges(state: State, dispatch: Function) {\r\n    if (!db || !user) {\r\n        console.error('DB or user not initialised. Cancelling listen to changes.');\r\n        return;\r\n    }\r\n    \r\n    db.collection('notes').where(\"owner\", \"==\", user.uid)\r\n        .onSnapshot({includeMetadataChanges: true}, (snapshot) => {\r\n            // console.log('snapshot', snapshot);\r\n            if (!snapshot.metadata.fromCache && !snapshot.metadata.hasPendingWrites) {\r\n                snapshot.docChanges().forEach(function(change) {\r\n                    // console.log('change.type', change.type);\r\n                    if (change.type === 'added') {\r\n                        // console.log('New remote note received: ', change.doc.id, change.doc.data());\r\n                        storeNoteLocally(change.doc.id, change.doc.data(), dispatch);\r\n                    } else if (change.type === 'modified') {\r\n                        // console.log('Updated note received: ', change.doc.data());\r\n                        updateNoteLocally(change.doc.id, change.doc.data(), dispatch);\r\n                    } else if (change.type === 'removed') {\r\n                        // console.log('Delete notification received: ', change.doc.id);\r\n                        removeNoteLocally(change.doc.id, dispatch);\r\n                    } \r\n                });\r\n            }\r\n        });\r\n\r\n}\r\n\r\nasync function retrieveNotes(localNotes: Array<Note>, dispatch: Function): Promise<any> {\r\n    if (!user) throw new Error('Not logged in');\r\n    const querySnapshot = await db.collection('notes').where(\"owner\", \"==\", user.uid).get();\r\n    querySnapshot.forEach((doc) => {\r\n        const remoteData = doc.data();\r\n        console.log(`${doc.id} =>`, remoteData);\r\n        const localNote = localNotes.find((note) => note.id === doc.id);\r\n        if (localNote) {\r\n            // TODO: rather than overwrite local data, add more complex logic to consolidate changes\r\n            updateNoteLocally(doc.id, remoteData, dispatch);\r\n        } else {\r\n            storeNoteLocally(doc.id, remoteData, dispatch);\r\n        }\r\n    });\r\n}\r\n\r\nasync function sendNotes(notes: Array<Note>, dispatch: Function): Promise<any> {\r\n    console.log('sending local notes to server');\r\n    await Promise.all(\r\n        notes.map((note) => {\r\n            if (note.id.startsWith('local:')) {\r\n                // console.log('sending note:', note.id);\r\n                return storeNoteRemotely(note, dispatch);\r\n            } else return new Promise((resolve, reject) => resolve());\r\n        })\r\n    );\r\n}\r\n\r\nfunction updateNoteLocally(id, data, dispatch) {\r\n    dispatch({\r\n        type: 'modifyNote',\r\n        source: 'remote',\r\n        id: id,\r\n        content: {\r\n            title: data.title,\r\n            body: data.body,\r\n        }\r\n    });\r\n}\r\n\r\nfunction storeNoteLocally(id, data, dispatch) {\r\n    dispatch({\r\n        type: 'addNote',\r\n        source: 'remote',\r\n        content: {\r\n            id: id,\r\n            title: data.title,\r\n            body: data.body,\r\n        }\r\n    });\r\n}\r\n\r\nfunction removeNoteLocally(id, dispatch) {\r\n    dispatch({\r\n        type: 'removeNote',\r\n        source: 'remote',\r\n        id: id,\r\n    });\r\n}\r\n\r\nasync function storeNoteRemotely(note: Note, dispatch: Function): Promise<void> {\r\n    console.log('storing note to server');\r\n    if (!user) throw new Error('Not logged in');\r\n\r\n    try {\r\n        const docRef = await db.collection('notes').add({\r\n            title: note.title,\r\n            body: note.body,\r\n            owner: user.uid,\r\n        });\r\n        console.log('Document written with ID: ', docRef.id);\r\n        // modify local id to match cloud id\r\n        dispatch({\r\n            type: 'modifyNote',\r\n            source: 'remote',\r\n            id: note.id,\r\n            content: {\r\n                id: docRef.id,\r\n                title: note.title,\r\n                body: note.body, \r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.error('Error adding document: ', error);\r\n    }\r\n}\r\n\r\nasync function updateNoteRemotely(note: Note, dispatch: Function): Promise<void> {\r\n    console.log('updating note on server');\r\n    if (!user) throw new Error('Not logged in');\r\n\r\n    try {\r\n        await db.collection('notes').doc(note.id).set({\r\n            title: note.title,\r\n            body: note.body,\r\n            owner: user.uid,\r\n        })\r\n        console.log(`Document ${note.id} updated`);\r\n    } catch(error) {\r\n        console.error(`Error updating document ${note.id}: `, error);\r\n    }\r\n}\r\n\r\nasync function removeNoteRemotely(id: string, dispatch: Function): Promise<void> {\r\n    console.log('removing note from server');\r\n    if (!user) throw new Error('Not logged in');\r\n\r\n    try {\r\n        await db.collection('notes').doc(id).delete();\r\n        console.log(`Remote document ${id} removed`);\r\n    } catch(error) {\r\n        console.error(`Error removing document ${id}: `, error);\r\n    }\r\n}\r\n\r\nexport default {\r\n    init,\r\n    waitForUserAuth,\r\n    startLogin,\r\n    finishLogin,\r\n    logout,\r\n    sync,\r\n    listenToChanges,\r\n    storeNoteRemotely,\r\n    updateNoteRemotely,\r\n    removeNoteRemotely,\r\n};\r\n","export const baseUrl = process.env.NODE_ENV === 'production' ? 'https://leanlauri.github.io/localnotes' : 'http://localhost:3000';\r\nexport const basePath = process.env.NODE_ENV === 'production' ? '/localnotes' : undefined;\r\n","/**\r\n * @flow\r\n */\r\nimport type { Node } from 'react';\r\n\r\nimport React, { useContext, useState } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport LoginModal from './LoginModal';\r\nimport LoginUpSellBanner from './LoginUpSellBanner';\r\nimport { StateContext } from './App';\r\nimport LoginStatusBanner from './LoginStatusBanner';\r\nimport connector from './firebaseConnector';\r\n\r\nfunction LoginBarWithBanners(): Node {\r\n    const [state, dispatch] = useContext(StateContext);\r\n    const [loginDialogVisible, setLoginDialogVisible] = useState(false);\r\n\r\n    const onSelect = (key, event) => {\r\n        switch (key) {\r\n            case '#login':\r\n                setLoginDialogVisible(true);\r\n                break;\r\n            case '#logout':\r\n                // TODO: handle login errors\r\n                connector.logout(state, dispatch);\r\n                break;\r\n            default: break;\r\n        }\r\n    };\r\n\r\n    const onLogin = async (email) => {\r\n        setLoginDialogVisible(false);\r\n        console.log('Login requested with:', email);\r\n        try {\r\n            await connector.startLogin(email, state, dispatch);\r\n        } catch (error) {\r\n            console.error('Error sending login email:', error, error && error.code);\r\n            dispatch({\r\n                type: 'logout',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <LoginModal\r\n                show={loginDialogVisible}\r\n                initialEmail={state.email}\r\n                onCancel={() => setLoginDialogVisible(false)}\r\n                onConfirm={onLogin}\r\n            />\r\n            <Navbar\r\n                bg=\"light\"\r\n                fixed=\"top\"\r\n                expand\r\n                onSelect={onSelect}>\r\n                <Navbar.Brand href=\"#home\">Local Notes</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\"></Nav>\r\n                    <Nav>\r\n                        {state.data.loginFlowStage === 'completed'\r\n                            ? <Nav.Link href=\"#logout\">Logout</Nav.Link>\r\n                            : <Nav.Link href=\"#login\">Login</Nav.Link>\r\n                        }\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            {(!state.data.loginFlowStage && !state.data.upSellDisabled)\r\n                ? <LoginUpSellBanner\r\n                    onDismiss={() => dispatch({\r\n                        type: 'disableUpSell'\r\n                    })}\r\n                    onAction={() => setLoginDialogVisible(true)}/>\r\n                : null\r\n            }\r\n            <LoginStatusBanner\r\n                status={state.connectState}\r\n                onLogin={() => setLoginDialogVisible(true)}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoginBarWithBanners;\r\n","/**\r\n * @flow\r\n */\r\nimport type {Node} from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport React from 'react';\r\n\r\ntype Props = {|\r\n    onClick: () => void,\r\n|};\r\n\r\nfunction AddCard({onClick}: Props): Node {\r\n    return (\r\n        <Card style={{ \r\n            width: '100%',\r\n            height: '20rem',\r\n            margin: '4px',\r\n            marginBottom: '8px',\r\n            borderStyle: 'dashed',\r\n            background: 'transparent',\r\n            borderColor: 'white',\r\n            borderWidth: 'medium',\r\n            color: 'white',\r\n        }}\r\n        onClick={onClick}\r\n        >\r\n            <Card.Body>\r\n                <Card.Title style={{verticalAlign: 'center'}}>\r\n                    Add new note\r\n                </Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default AddCard;","/**\r\n * @flow\r\n */\r\nimport type {Node} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React from 'react';\r\n\r\ntype Props = {|\r\n    show: boolean,\r\n    title: string,\r\n    message: string,\r\n    onCancel: () => void,\r\n    onConfirm: () => void,\r\n    type: 'confirm' | 'remove',\r\n|};\r\n\r\nfunction ConfirmModal({show, title, message, onCancel, onConfirm, type}: Props): Node {\r\n    return (\r\n        <Modal show={show} onHide={onCancel}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{title}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{message}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant={type === 'remove' ? 'danger' : 'primary'} onClick={onConfirm}>\r\n              {type === 'remove' ? 'Remove' : 'Confirm'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ConfirmModal;","/**\r\n * @flow\r\n */\r\nimport type {Node} from 'react';\r\nimport type {Note} from './notesReducer';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ConfirmModal from './ConfirmModal';\r\n\r\ntype Props = {|\r\n    content: Note,\r\n    update: Note => void,\r\n    remove: () => void,\r\n|};\r\n\r\nfunction NoteCard({content, update, remove}: Props): Node {\r\n    const [editing, setEditing] = useState(false);\r\n    const [title, setTitle] = useState(content.title);\r\n    const [body, setBody] = useState(content.body);\r\n    const [dialogVisible, setDialogVisible] = useState(false);\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        update({\r\n            ...content,\r\n            title,\r\n            body,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    \r\n    const createForm = () => (\r\n        <>\r\n            <ConfirmModal\r\n                show={dialogVisible}\r\n                title=\"Confirm remove\"\r\n                message=\"Are you sure you want to remove the note?\"\r\n                onCancel={() => setDialogVisible(false)}\r\n                onConfirm={remove}\r\n                type=\"remove\"/>\r\n            <Form\r\n                noValidate\r\n                onSubmit={onSubmit}>\r\n                <Card style={{ \r\n                    width: '100%',\r\n                    height: '20rem',\r\n                    margin: '4px',\r\n                    marginBottom: '8px',\r\n                }}>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            <Form.Control \r\n                                as=\"input\"\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                                defaultValue={content.title}\r\n                            />\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                onChange={(e) => setBody(e.target.value)}\r\n                                defaultValue={content.body}\r\n                                style={{height: '11rem', marginBottom: '1rem'}}\r\n                            />\r\n                        </Card.Text>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Button key=\"remove\" variant=\"outline-danger\" onClick={() => setDialogVisible(true)}>\r\n                                Remove\r\n                            </Button>\r\n                            <Button key=\"save\" type=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Form>\r\n        </>\r\n    );\r\n\r\n    const createView = () => (\r\n        <Card style={{ \r\n            width: '100%',\r\n            height: '20rem',\r\n            margin: '4px',\r\n            marginBottom: '8px',\r\n        }}>\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    {content.title}\r\n                </Card.Title>\r\n                <div style={{overflow: 'auto', height: '12rem', marginBottom: '1rem', whiteSpace: 'pre-line'}}>\r\n                    <Card.Text>\r\n                            {content.body}\r\n                    </Card.Text>\r\n                </div>\r\n                <Button variant=\"primary\" onClick={() => {setEditing(true)}}>\r\n                    Edit\r\n                </Button>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n    \r\n    return (\r\n        editing\r\n            ? createForm()\r\n            : createView()\r\n    );\r\n}\r\n\r\nexport default NoteCard;","/**\r\n * @flow\r\n */\r\nimport type {Node} from 'react';\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport React, { useContext } from 'react';\r\nimport AddCard from './AddCard';\r\nimport NoteCard from './NoteCard';\r\nimport { StateContext } from './App';\r\n\r\nfunction NotesContainer(): Node {\r\n    const [state, dispatch] = useContext(StateContext);\r\n    return (\r\n        <>\r\n            <Container >\r\n                <Row className=\"justify-content-md-center\" >\r\n                {state.data.notes.map(item => \r\n                    <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"4\" xl=\"4\" key={item.id}>\r\n                        <NoteCard\r\n                            content={item}\r\n                            update={(note) => dispatch({\r\n                                type: 'modifyNote',\r\n                                id: item.id,\r\n                                content: note,\r\n                            })}\r\n                            remove={() => dispatch({\r\n                                type: 'removeNote',\r\n                                id: item.id,\r\n                            })}\r\n                            />\r\n                    </Col>\r\n                )}\r\n                <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"4\" xl=\"4\" key=\"add-button\">\r\n                    <AddCard onClick={() => dispatch({\r\n                        type: 'addNote',\r\n                        content: {\r\n                            id: 'local:' + new Date().getTime(),\r\n                            title: 'New Note',\r\n                            body: '',\r\n                        }\r\n                    })}/>\r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default NotesContainer;","/**\r\n * Decorator for notesReducer that saves state to remote storage\r\n * \r\n * @flow\r\n */\r\nimport type { State } from './notesReducer';\r\n\r\nimport connector from './firebaseConnector';\r\n  \r\nfunction createRemoteDispatch(state: State, dispatch: Function): Function {\r\n    return (action) => {\r\n        dispatch(action);\r\n        if (action.source !== 'remote') handleAction(action, state, dispatch);\r\n    }\r\n}\r\n\r\nfunction handleAction(action, state, dispatch) {\r\n    if (state.connectState !== 'loggedIn') return;\r\n\r\n    switch (action.type) {\r\n        case 'addNote':\r\n            connector.storeNoteRemotely(action.content, dispatch);\r\n            break;\r\n        case 'modifyNote':\r\n            connector.updateNoteRemotely(action.content, dispatch);\r\n            break;\r\n        case 'removeNote':\r\n            connector.removeNoteRemotely(action.id, dispatch);\r\n            break;\r\n        default: break;\r\n    }\r\n}\r\n\r\nexport default createRemoteDispatch;","/**\r\n * @flow\r\n */\r\nimport type { Node } from 'react';\r\nimport type { State } from './notesReducer';\r\n\r\nimport React, { createContext, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport localStorageReducer from './localStorageReducer';\r\nimport LoginBarWithBanners from './LoginBarWithBanners';\r\nimport NotesContainer from './NotesContainer';\r\nimport connector from './firebaseConnector';\r\nimport createRemoteDispatch from './remoteDispatch';\r\nimport {basePath} from './urls';\r\n\r\nexport const StateContext = createContext<any, any>([null, null]);\r\n\r\nfunction isLoggedIn(state: State): boolean {\r\n  return state.data.loginFlowStage === 'completed' && state.connectState === 'loggedIn';\r\n}\r\n\r\nfunction App(): Node {\r\n  const [state, localDispatch] = localStorageReducer();\r\n  const dispatch = isLoggedIn(state) ? createRemoteDispatch(state, localDispatch) : localDispatch;\r\n  useEffect(() => {\r\n    if (state.data.loginFlowStage === 'completed') {\r\n      (async () => {\r\n        try {\r\n          connector.init(state, dispatch);\r\n          const user = await connector.waitForUserAuth(state, dispatch);\r\n          if (user) {\r\n            await connector.sync(state, dispatch);\r\n            connector.listenToChanges(state, dispatch);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error synchronising data:', error);\r\n        }\r\n      })();\r\n   }\r\n  }, [state.data.loginEmail, state.data.loginFlowStage]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={basePath}>\r\n        <Route\r\n          path=\"/finishLogin/\"\r\n          render={({match, history}) => {\r\n            handleLogin(state, dispatch, match, history);\r\n            return null;\r\n          }}/>\r\n          \r\n        <Route  \r\n          path=\"/:section?\"\r\n          render={({ match, history }) => {\r\n            console.log('Section', match.params.section); // not currently used\r\n            return (\r\n              <StateContext.Provider value={[state, dispatch]}>\r\n                <div className=\"topbar-container\">\r\n                  <LoginBarWithBanners />\r\n                </div>\r\n                <div className=\"App-contents\">\r\n                  <NotesContainer />\r\n                </div>  \r\n              </StateContext.Provider>\r\n            );\r\n          }}/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nasync function handleLogin(state, dispatch, match, history) {\r\n  console.log('Handling finishLogin request');\r\n  connector.init(state, dispatch);\r\n  const address = window.location.href;\r\n  history.push('/');\r\n  if (state.data.loginEmail == null) {\r\n    console.error('No login email in stored state');\r\n    dispatch({\r\n      type: 'loginFailed',\r\n    });\r\n  } else {\r\n    await connector.finishLogin(address, state.data.loginEmail, state, dispatch);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["AddCard.js","ConfirmModal.js","NoteCard.js","notesReducer.js","localStorageReducer.js","NotesContainer.js","App.js","serviceWorker.js","index.js"],"names":["AddCard","_ref","onClick","react_default","a","createElement","Card_default","style","width","height","margin","marginBottom","borderStyle","background","borderColor","borderWidth","color","Body","Title","verticalAlign","ConfirmModal","show","title","message","onCancel","onConfirm","type","Modal_default","onHide","Header","closeButton","Footer","Button_default","variant","NoteCard","content","update","remove","_useState","useState","_useState2","Object","slicedToArray","editing","setEditing","_useState3","_useState4","setTitle","_useState5","body","_useState6","setBody","_useState7","_useState8","dialogVisible","setDialogVisible","onSubmit","event","preventDefault","objectSpread","Fragment","src_ConfirmModal","Form_default","noValidate","Control","as","onChange","e","target","value","defaultValue","Text","display","justifyContent","key","overflow","whiteSpace","replaceNote","notes","id","index","findIndex","note","slice","concat","removeNote","reducer","state","action","hash","lastId","Error","LOCAL_STORAGE_KEY","initState","console","log","loadedState","localStorage","getItem","JSON","parse","localStorageReducer","_notesReducer","useReducer","_notesReducer2","dispatch","useEffect","setItem","stringify","saveState","NotesContainer","_localStorageReducer","_localStorageReducer2","Container","Row","className","map","item","Col","xs","sm","md","lg","xl","src_NoteCard","src_AddCard","App","src_NotesContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f318d21a.chunk.js","sourcesContent":["/**\n * @flow\n */\nimport type {Node} from 'react';\n\nimport Card from 'react-bootstrap/Card';\nimport React from 'react';\n\ntype Props = {|\n    onClick: () => void,\n|};\n\nfunction AddCard({onClick}: Props): Node {\n    return (\n        <Card style={{ \n            width: '100%',\n            height: '20rem',\n            margin: '4px',\n            marginBottom: '8px',\n            borderStyle: 'dashed',\n            background: 'transparent',\n            borderColor: 'white',\n            borderWidth: 'medium',\n            color: 'white',\n        }}\n        onClick={onClick}\n        >\n            <Card.Body>\n                <Card.Title style={{verticalAlign: 'center'}}>\n                    Add new note\n                </Card.Title>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default AddCard;","/**\n * @flow\n */\nimport type {Node} from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport React from 'react';\n\ntype Props = {|\n    show: boolean,\n    title: string,\n    message: string,\n    onCancel: () => void,\n    onConfirm: () => void,\n    type: 'confirm' | 'remove',\n|};\n\nfunction ConfirmModal({show, title, message, onCancel, onConfirm, type}: Props): Node {\n    return (\n        <Modal show={show} onHide={onCancel}>\n          <Modal.Header closeButton>\n            <Modal.Title>{title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{message}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={onCancel}>\n              Cancel\n            </Button>\n            <Button variant={type === 'remove' ? 'danger' : 'primary'} onClick={onConfirm}>\n              {type === 'remove' ? 'Remove' : 'Confirm'}\n            </Button>\n          </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default ConfirmModal;","/**\n * @flow\n */\nimport type {Node} from 'react';\nimport type {Note} from './notesReducer';\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport ConfirmModal from './ConfirmModal';\n\ntype Props = {|\n    content: Note,\n    update: Note => void,\n    remove: () => void,\n|};\n\nfunction NoteCard({content, update, remove}: Props): Node {\n    const [editing, setEditing] = useState(false);\n    const [title, setTitle] = useState(content.title);\n    const [body, setBody] = useState(content.body);\n    const [dialogVisible, setDialogVisible] = useState(false);\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        update({\n            ...content,\n            title,\n            body,\n        });\n        setEditing(false);\n    }\n    \n    const createForm = () => (\n        <>\n            <ConfirmModal\n                show={dialogVisible}\n                title=\"Confirm remove\"\n                message=\"Are you sure you want to remove the note?\"\n                onCancel={() => setDialogVisible(false)}\n                onConfirm={remove}\n                type=\"remove\"/>\n            <Form\n                noValidate\n                onSubmit={onSubmit}>\n                <Card style={{ \n                    width: '100%',\n                    height: '20rem',\n                    margin: '4px',\n                    marginBottom: '8px',\n                }}>\n                    <Card.Body>\n                        <Card.Title>\n                            <Form.Control \n                                as=\"input\"\n                                onChange={(e) => setTitle(e.target.value)}\n                                defaultValue={content.title}\n                            />\n                        </Card.Title>\n                        <Card.Text>\n                            <Form.Control\n                                as=\"textarea\"\n                                onChange={(e) => setBody(e.target.value)}\n                                defaultValue={content.body}\n                                style={{height: '11rem', marginBottom: '1rem'}}\n                            />\n                        </Card.Text>\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <Button key=\"remove\" variant=\"outline-danger\" onClick={() => setDialogVisible(true)}>\n                                Remove\n                            </Button>\n                            <Button key=\"save\" type=\"submit\">\n                                Save\n                            </Button>\n                        </div>\n                    </Card.Body>\n                </Card>\n            </Form>\n        </>\n    );\n\n    const createView = () => (\n        <Card style={{ \n            width: '100%',\n            height: '20rem',\n            margin: '4px',\n            marginBottom: '8px',\n        }}>\n            <Card.Body>\n                <Card.Title>\n                    {content.title}\n                </Card.Title>\n                <div style={{overflow: 'auto', height: '12rem', marginBottom: '1rem', whiteSpace: 'pre-line'}}>\n                    <Card.Text>\n                            {content.body}\n                    </Card.Text>\n                </div>\n                <Button variant=\"primary\" onClick={() => {setEditing(true)}}>\n                    Edit\n                </Button>\n            </Card.Body>\n        </Card>\n    );\n    \n    return (\n        editing\n            ? createForm()\n            : createView()\n    );\n}\n\nexport default NoteCard;","/**\n * @flow\n */\nimport { useReducer } from 'react';\n\nexport type Note = {|\n    id?: number,\n    title: ?string,\n    body: ?string,\n|};\n\nexport type State = {|\n    hash: number,\n    notes: Array<Note>,\n    lastId: number,\n|};\n\nfunction addNote(notes: Array<Note>, id: number, content: Note): Array<Note> {\n    return notes\n        .concat({\n            ...content,\n            id,\n        });\n}\n\nfunction replaceNote(notes: Array<Note>, id: number, content: Note): Array<Note> {\n    const index = notes.findIndex(note => note.id === id);\n    if (index === -1) return notes;\n    return notes\n        .slice(0, index)\n        .concat({\n            ...content,\n            id,\n        })\n        .concat(\n            notes.slice(index + 1)\n        );\n}\n\nfunction removeNote(notes: Array<Note>, id: number): Array<Note> {\n    const index = notes.findIndex(note => note.id === id);\n    if (index === -1) return notes;\n    return notes\n        .slice(0, index)\n        .concat(\n            notes.slice(index + 1)\n        );\n}\n\nexport function reducer(state: State, action: any): State {\n    switch (action.type) {\n        case 'addNote':\n            return {\n                ...state,\n                hash: state.hash + 1,\n                notes: addNote(state.notes, state.lastId + 1, action.content),\n                lastId: state.lastId + 1,\n            };\n        case 'modifyNote':\n            if (action.id == null) return state;\n            return {\n                ...state,\n                hash: state.hash + 1,\n                notes: replaceNote(state.notes, action.id, action.content),\n            };\n        case 'removeNote':\n            if (action.id == null) return state;\n            return {\n                ...state,\n                hash: state.hash + 1,\n                notes: removeNote(state.notes, action.id),\n            }\n        default: throw new Error('unknown action: ' + action.type);\n    }\n}\n\nexport default function notesReducer(initState: () => State) {\n    return useReducer<State, any, null>(reducer, null, initState);\n}","/**\n * Decorator for notesReducer that loads/saves state from local storage\n * \n * @flow\n */\nimport type { State } from './notesReducer';\n\nimport { useEffect } from 'react';\nimport notesReducer from './notesReducer';\n\nconst LOCAL_STORAGE_KEY = 'appState';\n\nfunction initState() {\n    console.log('loading');\n    let loadedState = localStorage.getItem(LOCAL_STORAGE_KEY) || '';\n    try {\n        loadedState = JSON.parse(loadedState);\n    } catch (e) {\n        loadedState = null;\n    }\n    return loadedState || {hash: 0, lastId: 0, notes: []};\n}\n\nfunction saveState(state: State) {\n    console.log('saving: ', state.hash);\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(state));\n}\n\nfunction localStorageReducer() {\n    const [state, dispatch] = notesReducer(initState);\n\n    useEffect(() => {\n        saveState(state);\n    }, [state]);\n\n    return [state, dispatch];\n}\n\nexport default localStorageReducer;","/**\n * @flow\n */\nimport type {Node} from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport React from 'react';\nimport AddCard from './AddCard';\nimport NoteCard from './NoteCard';\nimport localStorageReducer from './localStorageReducer';\n\nfunction NotesContainer(): Node {\n    const [state, dispatch] = localStorageReducer();\n    \n    return (\n        <>\n            <Container >\n                <Row className=\"justify-content-md-center\" >\n                {state.notes.map(item => \n                    <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"4\" xl=\"4\" key={item.id}>\n                        <NoteCard\n                            content={item}\n                            update={(note) => dispatch({\n                                type: 'modifyNote',\n                                id: item.id,\n                                content: note,\n                            })}\n                            remove={() => dispatch({\n                                type: 'removeNote',\n                                id: item.id,\n                            })}\n                            />\n                    </Col>\n                )}\n                <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"4\" xl=\"4\" key=\"add-button\">\n                    <AddCard onClick={() => dispatch({\n                        type: 'addNote',\n                        content: {\n                            title: 'New Note',\n                            body: '',\n                        }\n                    })}/>\n                </Col>\n                </Row>\n            </Container>\n        </>\n\n    );\n}\n\nexport default NotesContainer;","/**\n * @flow\n */\nimport type {Node} from 'react';\n\nimport React from 'react';\nimport './App.css';\nimport NotesContainer from './NotesContainer';\n\nfunction App(): Node {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <NotesContainer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}